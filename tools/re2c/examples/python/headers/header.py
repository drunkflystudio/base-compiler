# Generated by re2py
# re2py $INPUT -o $OUTPUT --header lexer/state.py

from lexer.state import State



def lex(yyrecord):

    yystate = 0
    while True:
        match yystate:
            case 0:
                yych = yyrecord.yyinput[yyrecord.yycursor]
                if yych <= 0x60:
                    yyt1 = yyrecord.yycursor
                    yystate = 1
                    continue
                if yych <= 0x61:
                    yyrecord.yycursor += 1
                    yystate = 0
                    continue
                if yych <= 0x62:
                    yyt1 = yyrecord.yycursor
                    yyrecord.yycursor += 1
                    yystate = 2
                    continue
                yyt1 = yyrecord.yycursor
                yystate = 1
                continue
            case 1:
                t = yyt1
                return t
            case 2:
                yych = yyrecord.yyinput[yyrecord.yycursor]
                if yych == 0x62:
                    yyrecord.yycursor += 1
                    yystate = 2
                    continue
                yystate = 1
                continue
            case _:
                raise "internal lexer error"


assert lex(State(b"ab\0")) == 1
# Generated by re2py

class State:
    def __init__(self, str):
        self.yyinput = str
        self.yycursor = 0
        
        self.yyt1 = 0
python/headers/header.re:21:17: warning: rule matches empty string [-Wmatch-empty-string]
